out_dir: results
metric_best: accuracy-SBM
accelerator: "cuda:1"
wandb:
  use: False
  project: PATTERN
dataset:
  format: PyG-GNNBenchmarkDataset
  name: PATTERN
  task: graph
  task_type: classification
  transductive: False
  split_mode: standard
  node_encoder: True
  node_encoder_name: RWSE 
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: DummyEdge
  edge_encoder_bn: False
posenc_RWSE:
  enable: True
  kernel:
    times_func: range(1,17)
  model: Linear
  dim_pe: 7
  raw_norm_type: BatchNorm
train:
  mode: custom
  batch_size: 32
  eval_period: 1
  ckpt_period: 100
model:
  type: GEAET
  loss_fun: weighted_cross_entropy
  edge_decoding: dot
gt:  # Hyperparameters optimized for up to ~500k budget.
  layer_type: CustomGatedGCN+Transformer+GEANet
  layers: 7
  n_heads: 4
  dim_hidden: 64  # `gt.dim_hidden` must match `gnn.dim_inner`
  ffn_dropout: 0.13
  global_dropout: 0.13
  local_dropout: 0.13
  external_dropout: 0.13
  attn_dropout: 0.45
  layer_norm: False
  batch_norm: True
GEANet:
  n_heads: 4
  unit_size: 16
  edge_unit: True
  shared_unit: True
gnn:
  head: inductive_node
  layers_pre_mp: 0
  layers_post_mp: 3
  dim_inner: 64  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 1e-5
  base_lr: 0.0005
  max_epoch: 100
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5